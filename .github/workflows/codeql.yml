name: CodeQL Security Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  security-events: write
  actions: read
  contents: read

jobs:
  codeql-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configurar CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java
          queries: security-extended,security-and-quality
          build-mode: manual
          ram: 4096

      - name: Configurar Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Criar diretório de libs e baixar dependências
        run: |
          mkdir -p libs
          wget -q https://repo1.maven.org/maven2/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar -P libs/

      - name: Detectar ferramenta de build e compilar
        run: |
          if [ -f "pom.xml" ]; then
            mvn clean install -DskipTests || echo "Erro de compilação, continuando com a análise..."
          elif [ -f "build.gradle" ] || [ -f "settings.gradle" ]; then
            chmod +x gradlew
            ./gradlew build -x test || echo "Erro de compilação, continuando com a análise..."
          elif ls *.java 1> /dev/null 2>&1; then
            mkdir -p bin
            find . -name "*.java" > sources.txt
            javac -cp .:libs/* -d bin @sources.txt || echo "Erro de compilação, continuando com a análise..."
          else
            echo "Nenhuma ferramenta de build detectada."
            exit 1
          fi

      - name: Rodar análise CodeQL
        uses: github/codeql-action/analyze@v3
        with:
          category: "/security-and-quality"
