name: OWASP Dependency-Check

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - name: Cache do OWASP Dependency-Check Database
        uses: actions/cache@v3
        with:
          path: ~/.dependency-check
          key: ${{ runner.os }}-dependency-check-db-v2
          restore-keys: |
            ${{ runner.os }}-dependency-check-db-v2

      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Baixar e instalar OWASP Dependency-Check (versão fixa)
        run: |
          DEPENDENCY_CHECK_VERSION="9.0.9"
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v${DEPENDENCY_CHECK_VERSION}/dependency-check-${DEPENDENCY_CHECK_VERSION}-release.zip
          unzip dependency-check-${DEPENDENCY_CHECK_VERSION}-release.zip
          export SUPPRESS_LOGGING=true
          export JAVA_OPTS="-Xmx2G"

      - name: Rodar OWASP Dependency-Check
        run: |
          if [ -d ~/.dependency-check/data ]; then
            echo "Executando Dependency-Check no modo offline..."
            dependency-check/bin/dependency-check.sh --scan . --format HTML --out reports --noupdate --disableNodeAudit
          else
            echo "Cache não encontrado. Baixando base de dados e executando a análise..."
            # Permite o download uma vez para criar o banco de dados
            dependency-check/bin/dependency-check.sh --scan . --format HTML --out reports
            # Agora o banco de dados está disponível, execute novamente em modo offline
            dependency-check/bin/dependency-check.sh --scan . --format HTML --out reports --noupdate --disableNodeAudit
          fi

